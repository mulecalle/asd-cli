# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Asd CLI CI

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]

jobs:

  test:
    name: test
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.19.0'
      - run: go test -v -cover

  build:
    name: Build
    runs-on: 'ubuntu-latest'
    needs: test
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
    - name: Name Binary
      run: |
        BINARY_NAME=${{github.repository}}
        echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
    - name: Create Binary
      run: go build -o "$BINARY_NAME" -v

  release:
    name: Release
    runs-on: 'ubuntu-latest'
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Release Notes
      run: git log $(git describe HEAD~ --tags --always --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
    - name: Release with Notes
      uses: softprops/action-gh-release@v1
      with:
        body_path: ".github/RELEASE-TEMPLATE.md"
        draft: true
        files: ${{env.BINARY_NAME}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag:
    name: Tag
    runs-on: 'ubuntu-latest'
    needs: build
    strategy:
      matrix:
        node-version:
          - 12
    steps:
      - uses: phish108/autotag-action@v1.1.55
        with:
          release-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN}}
